[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "faceit"
version = "0.1.1"
description = "The Python wrapper for the Faceit API"
authors = [
    { name = "zombyacoff", email = "zombyacoff@gmail.com" }
]
readme = "README.md"
license = { text = "Apache-2.0" }
requires-python = ">=3.8"
dependencies = [
    "httpx (>=0.27.0,<1.0.0)",
    "pycountry (>=24.6.1,<25.0.0)",
    "pydantic-extra-types (>=2.10.3,<3.0.0)",
    "pydantic (>=2.7.1,<3.0.0)",
    "tenacity (>=8.2.3,<9.0.0)",
    "typing-extensions (>=4.11.0,<5.0.0)"
]
keywords = ["faceit", "api", "wrapper"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent"
]

[project.urls]
Documentation = "https://docs.faceit.com/docs"

[tool.poetry]
packages = [{ include = "faceit", from = "src" }]

[tool.poetry.group.dev.dependencies]
mypy = "^1.5.1"
pre-commit = "3.5.0"
pytest = "^7.4.0"
pytest-asyncio = "^0.21.1"
python-dotenv = "^1.0.0"
ruff = "^0.4.8"
sphinx = "^7.1.2"

[tool.mypy]
python_version = "3.8"
no_implicit_reexport = true
exclude = [
    "_.py",
    "_async.py",
    "docs/*",
    "examples/*",
    "tests/*"
]

[tool.pytest.ini_options]
pythonpath = "."

[tool.ruff]
line-length = 79
preview = true
target-version = "py38"
lint.select = ["ALL"]
lint.ignore = [
    "ANN401",
    "PYI058",
    "PYI059",
    "B024",
    "COM812",
    "CPY001",
    "D",
    "EM101",
    "EM102",
    "E501",
    "ERA001",
    "FBT001",
    "FBT003",
    "FIX002",
    "PLR0904",
    "PLR0913",
    "PLW3201",
    "PT001",
    "RUF001",
    "RUF003",
    "RUF006",
    "RUF012",
    "SLF001",
    "TD",
    "S101",
    "TRY003"
]

[tool.ruff.lint.per-file-ignores]
"docs/*" = ["ALL"]
"examples/*" = ["ALL"]
"tests/*" = ["ALL"]
"types.py" = ["F401", "PLC041", "ICN003", "PYI018"]
"__init__.py" = ["F401", "PLC041"]
"_.py" = ["ALL"]
"_async.py" = ["ALL"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = [
    "faceit.resources.pagination.pages", 
    "faceit.resources.pagination.MaxPages"  # Deprecated. Remove when support is discontinued.
] 

[tool.ruff.lint.flake8-import-conventions]
banned-from = ["typing", "typing_extensions"]

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["field_validator"]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 100
quote-style = "double"
line-ending = "auto"
