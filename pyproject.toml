[project]
name = "faceit"
version = "0.1.2"
description = "The Python wrapper for the Faceit API"
readme = "README.rst"
requires-python = ">=3.8"
authors = [
    { name = "zombyacoff", email = "zombyacoff@gmail.com" }
]
license = { text = "Apache-2.0" }
keywords = ["faceit", "api", "wrapper"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]
dependencies = [
    "httpx>=0.27.0,<1.0.0",
    "pycountry>=24.6.1,<25.0.0",
    "pydantic-extra-types>=2.10.3,<3.0.0",
    "pydantic>=2.7.1,<3.0.0",
    "tenacity>=8.2.3,<9.0.0",
    "typing-extensions>=4.11.0,<5.0.0",
]

[project.urls]
Documentation = "https://docs.faceit.com/docs"

[dependency-groups]
build = ["hatch"]
dev = [
    "mypy>=1.5.1",
    "pre-commit==3.5.0",
    "ruff>=0.4.8",
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.1",
]

[project.optional-dependencies]
env = [
    "python-decouple-typed>=3.11.0",
]

[tool.hatch.build]
sources = ["src"]

[tool.hatch.build.targets.sdist]
include = [
    "/src/faceit",
    "/README.rst",
    "/LICENSE",
]
exclude = [
    "/tests",
    "/examples",
    "/docs",
    "/output_dir",
    ".*",
]

[tool.mypy]
exclude = [
    "_.py",
    "_async.py",
    "docs/*",
    "examples/*",
    "tests/*",
]
mypy_path = "./stubs"
python_version = "3.8"
local_partial_types = true
no_implicit_reexport = true
strict = true
warn_unreachable = true

[tool.pytest.ini_options]
pythonpath = "."

[tool.ruff]
line-length = 79
preview = true
target-version = "py38"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN401",
    "PYI058",
    "PYI059",
    "B024",
    "COM812",
    "CPY001",
    "D",
    "DOC",
    "EM101",
    "EM102",
    "E501",
    "ERA001",
    "FBT001",
    "FBT003",
    "FIX002",
    "PLR0904",
    "PLR0913",
    "PLW3201",
    "PT001",
    "RUF001",
    "RUF003",
    "RUF006",
    "RUF012",
    "SLF001",
    "TD",
    "S101",
    "TRY003",
]

[tool.ruff.lint.per-file-ignores]
"docs/*" = ["ALL"]
"examples/*" = ["ALL"]
"tests/*" = ["ALL"]
"types.py" = [
    "F401",
    "PLC041",
    "ICN003",
    "PYI018",
]
"__init__.py" = [
    "F401",
    "PLC041",
]
"_.py" = ["ALL"]
"_async.py" = ["ALL"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = [
    "faceit.http.client.env",
    "faceit.resources.pagination.pages",
    "faceit.resources.pagination.MaxPages",
]

[tool.ruff.lint.flake8-import-conventions]
banned-from = [
    "asyncio",
    "httpx",
    "json",
    "logging",
    "math",
    "os",
    "re",
    "reprlib",
    "typing",
]

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["field_validator"]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 100
quote-style = "double"
line-ending = "auto"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
